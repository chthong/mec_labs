# Copyright Â© 2023 the OAI-RNIS Authors

# Licensed under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License. 
# Contact: netsoft@eurecom.fr

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from oai_rnis.models.base_model_ import Model
from oai_rnis.models.ng_bearer_notification_ng_ue_info import NGBearerNotificationNgUeInfo  # noqa: F401,E501
from oai_rnis.models.time_stamp import TimeStamp  # noqa: F401,E501
from oai_rnis.utils import util


class NGBearerNotification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, notification_type: str=None, ng_event: int=None, ng_ue_info: NGBearerNotificationNgUeInfo=None, time_stamp: TimeStamp=None):  # noqa: E501
        """NGBearerNotification - a model defined in Swagger

        :param notification_type: The notification_type of this NGBearerNotification.  # noqa: E501
        :type notification_type: str
        :param ng_event: The ng_event of this NGBearerNotification.  # noqa: E501
        :type ng_event: int
        :param ng_ue_info: The ng_ue_info of this NGBearerNotification.  # noqa: E501
        :type ng_ue_info: NGBearerNotificationNgUeInfo
        :param time_stamp: The time_stamp of this NGBearerNotification.  # noqa: E501
        :type time_stamp: TimeStamp
        """
        self.swagger_types = {
            'notification_type': str,
            'ng_event': int,
            'ng_ue_info': NGBearerNotificationNgUeInfo,
            'time_stamp': TimeStamp
        }

        self.attribute_map = {
            'notification_type': 'notificationType',
            'ng_event': 'ngEvent',
            'ng_ue_info': 'ngUeInfo',
            'time_stamp': 'timeStamp'
        }
        self._notification_type = notification_type
        self._ng_event = ng_event
        self._ng_ue_info = ng_ue_info
        self._time_stamp = time_stamp

    @classmethod
    def from_dict(cls, dikt) -> 'NGBearerNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NGBearerNotification of this NGBearerNotification.  # noqa: E501
        :rtype: NGBearerNotification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notification_type(self) -> str:
        """Gets the notification_type of this NGBearerNotification.

        Shall be set to \"NGBearerNotification\".  # noqa: E501

        :return: The notification_type of this NGBearerNotification.
        :rtype: str
        """
        return self._notification_type

    @notification_type.setter
    def notification_type(self, notification_type: str):
        """Sets the notification_type of this NGBearerNotification.

        Shall be set to \"NGBearerNotification\".  # noqa: E501

        :param notification_type: The notification_type of this NGBearerNotification.
        :type notification_type: str
        """
        if notification_type is None:
            raise ValueError("Invalid value for `notification_type`, must not be `None`")  # noqa: E501

        self._notification_type = notification_type

    @property
    def ng_event(self) -> int:
        """Gets the ng_event of this NGBearerNotification.

        The subscribed event that triggered this notification in NGBearerSubscription.  # noqa: E501

        :return: The ng_event of this NGBearerNotification.
        :rtype: int
        """
        return self._ng_event

    @ng_event.setter
    def ng_event(self, ng_event: int):
        """Sets the ng_event of this NGBearerNotification.

        The subscribed event that triggered this notification in NGBearerSubscription.  # noqa: E501

        :param ng_event: The ng_event of this NGBearerNotification.
        :type ng_event: int
        """
        if ng_event is None:
            raise ValueError("Invalid value for `ng_event`, must not be `None`")  # noqa: E501

        self._ng_event = ng_event

    @property
    def ng_ue_info(self) -> NGBearerNotificationNgUeInfo:
        """Gets the ng_ue_info of this NGBearerNotification.


        :return: The ng_ue_info of this NGBearerNotification.
        :rtype: NGBearerNotificationNgUeInfo
        """
        return self._ng_ue_info

    @ng_ue_info.setter
    def ng_ue_info(self, ng_ue_info: NGBearerNotificationNgUeInfo):
        """Sets the ng_ue_info of this NGBearerNotification.


        :param ng_ue_info: The ng_ue_info of this NGBearerNotification.
        :type ng_ue_info: NGBearerNotificationNgUeInfo
        """
        if ng_ue_info is None:
            raise ValueError("Invalid value for `ng_ue_info`, must not be `None`")  # noqa: E501

        self._ng_ue_info = ng_ue_info

    @property
    def time_stamp(self) -> TimeStamp:
        """Gets the time_stamp of this NGBearerNotification.


        :return: The time_stamp of this NGBearerNotification.
        :rtype: TimeStamp
        """
        return self._time_stamp

    @time_stamp.setter
    def time_stamp(self, time_stamp: TimeStamp):
        """Sets the time_stamp of this NGBearerNotification.


        :param time_stamp: The time_stamp of this NGBearerNotification.
        :type time_stamp: TimeStamp
        """

        self._time_stamp = time_stamp
