# Copyright Â© 2023 the OAI-RNIS Authors

# Licensed under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License. 
# Contact: netsoft@eurecom.fr

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from oai_rnis.models.base_model_ import Model
from oai_rnis.models.subscription_link_list_links import SubscriptionLinkListLinks  # noqa: F401,E501
from oai_rnis.utils import util


class SubscriptionLinkList(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, links: SubscriptionLinkListLinks=None):  # noqa: E501
        """SubscriptionLinkList - a model defined in Swagger

        :param links: The links of this SubscriptionLinkList.  # noqa: E501
        :type links: SubscriptionLinkListLinks
        """
        self.swagger_types = {
            'links': SubscriptionLinkListLinks
        }

        self.attribute_map = {
            'links': '_links'
        }
        self._links = links

    @classmethod
    def from_dict(cls, dikt) -> 'SubscriptionLinkList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SubscriptionLinkList of this SubscriptionLinkList.  # noqa: E501
        :rtype: SubscriptionLinkList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self) -> SubscriptionLinkListLinks:
        """Gets the links of this SubscriptionLinkList.


        :return: The links of this SubscriptionLinkList.
        :rtype: SubscriptionLinkListLinks
        """
        return self._links

    @links.setter
    def links(self, links: SubscriptionLinkListLinks):
        """Sets the links of this SubscriptionLinkList.


        :param links: The links of this SubscriptionLinkList.
        :type links: SubscriptionLinkListLinks
        """
        if links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

        self._links = links
