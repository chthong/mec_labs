# Copyright Â© 2023 the OAI-RNIS Authors

# Licensed under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License. 
# Contact: netsoft@eurecom.fr

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from oai_rnis.models.base_model_ import Model
from oai_rnis.utils import util


class RabRelNotificationErabReleaseInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, erab_id: int=None):  # noqa: E501
        """RabRelNotificationErabReleaseInfo - a model defined in Swagger

        :param erab_id: The erab_id of this RabRelNotificationErabReleaseInfo.  # noqa: E501
        :type erab_id: int
        """
        self.swagger_types = {
            'erab_id': int
        }

        self.attribute_map = {
            'erab_id': 'erabId'
        }
        self._erab_id = erab_id

    @classmethod
    def from_dict(cls, dikt) -> 'RabRelNotificationErabReleaseInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RabRelNotification_erabReleaseInfo of this RabRelNotificationErabReleaseInfo.  # noqa: E501
        :rtype: RabRelNotificationErabReleaseInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def erab_id(self) -> int:
        """Gets the erab_id of this RabRelNotificationErabReleaseInfo.

        The attribute that uniquely identifies a Radio Access bearer for specific UE as defined in ETSI TS 136 413 [i.3].  # noqa: E501

        :return: The erab_id of this RabRelNotificationErabReleaseInfo.
        :rtype: int
        """
        return self._erab_id

    @erab_id.setter
    def erab_id(self, erab_id: int):
        """Sets the erab_id of this RabRelNotificationErabReleaseInfo.

        The attribute that uniquely identifies a Radio Access bearer for specific UE as defined in ETSI TS 136 413 [i.3].  # noqa: E501

        :param erab_id: The erab_id of this RabRelNotificationErabReleaseInfo.
        :type erab_id: int
        """
        if erab_id is None:
            raise ValueError("Invalid value for `erab_id`, must not be `None`")  # noqa: E501

        self._erab_id = erab_id
